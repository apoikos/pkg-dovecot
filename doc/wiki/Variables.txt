Variables
=========

You can use special variables in several places:

 * <mail_location> [MailLocation.txt] setting and <namespace> [Namespaces.txt]
   locations
 * <static userdb> [UserDatabase.Static.txt] and <passwd-file userdb>
   [AuthDatabase.PasswdFile.txt] template strings
 * <LDAP> [AuthDatabase.LDAP.txt] and <SQL> [AuthDatabase.SQL.txt] userdb query
   strings
 * log prefix for imap/pop3 process
 * <Plugin> [Plugins.txt] settings

The variables that work everywhere are:

 * %u - username
 * %n - user part in user@domain, same as %u if there's no domain
 * %d - domain part in user@domain, empty if user there's no domain
 * %s - service (IMAP, POP3, smtp, deliver (unfortunately mixed casing is
   used))
 * %p - PID of the current process (login or imap/pop3 process)
 * %l - local IP address
 * %r - remote IP address

These variables work almost everywhere else except in Dovecot-auth (userdb
queries/templates):

 * %h - home directory
 * %i - UNIX UID of the user

These variables work only in Dovecot-auth:

 * %w - plaintext password from plaintext authentication mechanism
 * %m - authentication method (eg. PLAIN) (since v1.0.rc27)
 * %c - "secured" string with SSL, TLS and localhost connections. Otherwise
   empty. (since v1.0.rc27)

These variables work only in 'login_log_format_elements' setting:

 * %m - authentication method (eg. PLAIN)
 * %a - Local port
 * %b - Remote port
 * %c - SSL, TLS or empty

Modifiers
---------

You can apply a modifiers for each variable (eg. %Ls = pop3):

 * %L - lowercase
 * %U - uppercase
 * %E - escape '"', "'" and '\' characters by inserting '\' before them. Note
   that variables in SQL queries are automatically escaped, you don't need to
   use this modifier for them.
 * %R - reverse the string
 * %H - take a 32bit hash of the variable and return it as hex. You can also
   limit the hash value. For example %256Hu gives values 0..ff. You might want
   padding also, so %2.256Hu gives 00..ff. This can be useful for example in
   dividing users automatically to multiple partitions. Note that if you're
   hashing usernames being in user@domain form, you probably want to reverse
   the string to get better hash value variety, eg. %3RHu.
 * %M - return the string's MD5 sum
 * %D - return "sub.domain.org" as "sub,dc=domain,dc=org" (for LDAP queries)

You can take a substring of the variable by giving optional offset followed by
'.' and width after the '%' character. For example %2u gives first two
characters of the username. %2.1u gives third character of the username.

If the offset is negative, it counts from the end, for example %-2.2i gives the
UID mod 100 (last two characters of the UID printed in a string). If a positive
offset points outside the value, empty string is returned, if a negative offset
does then the string is taken from the start.

If the width is prefixed with zero, the string isn't truncated, but only padded
with '0' character if the string is shorter. For example %04i may return
"0001", "1000" and "12345". %1.04i for the same string would return "001",
"000" and "2345".

Type in %% to get a literal percent sign. 

(This file was created from the wiki on 2007-04-13 14:32)
