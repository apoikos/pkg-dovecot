Author: Jaldhar H. Vyas <jaldhar@debian.org>
Description: Small changes to dovecot-example.conf
Last-Update: 2009-07-31

Index: dovecot-1.2.7/dovecot-example.conf
===================================================================
--- dovecot-1.2.7.orig/dovecot-example.conf	2009-11-18 08:55:04.542991456 +0100
+++ dovecot-1.2.7/dovecot-example.conf	2009-11-18 08:56:33.807442258 +0100
@@ -17,11 +17,12 @@
 # --sysconfdir=/etc --localstatedir=/var --with-ssldir=/etc/ssl
 
 # Base directory where to store runtime data.
-#base_dir = /var/run/dovecot/
+#base_dir = /var/run/dovecot
 
 # Protocols we want to be serving: imap imaps pop3 pop3s managesieve
 # If you only want to use dovecot-auth, you can set this to "none".
 #protocols = imap imaps
+protocols = none
 
 # A space separated list of IP or host addresses where to listen in for
 # connections. "*" listens in all IPv4 interfaces. "[::]" listens in all IPv6
@@ -74,6 +75,7 @@
 # Prefix for each line written to log file. % codes are in strftime(3)
 # format.
 #log_timestamp = "%b %d %H:%M:%S "
+log_timestamp = "%Y-%m-%d %H:%M:%S "
 
 # Syslog facility to use if you're logging to syslog. Usually if you don't
 # want to use "mail", you'll use local0..local7. Also other standard
@@ -89,13 +91,12 @@
 # setting if not specified.
 #ssl_listen =
 
-# SSL/TLS support: yes, no, required. <doc/wiki/SSL.txt>
+# SSL/TLS support: yes, no, required. </usr/share/doc/dovecot-common/wiki/SSL.txt>
 #ssl = yes
 
 # PEM encoded X.509 SSL/TLS certificate and private key. They're opened before
 # dropping root privileges, so keep the key file unreadable by anyone but
-# root. Included doc/mkcert.sh can be used to easily generate self-signed
-# certificate, just make sure to update the domains in dovecot-openssl.cnf
+# root.
 #ssl_cert_file = /etc/ssl/certs/dovecot.pem
 #ssl_key_file = /etc/ssl/private/dovecot.pem
 
@@ -134,7 +135,7 @@
 ## Login processes
 ##
 
-# <doc/wiki/LoginProcess.txt>
+# </usr/share/doc/dovecot-common/wiki/LoginProcess.txt>
 
 # Directory where authentication process places authentication UNIX sockets
 # which login needs to be able to connect to. The sockets are created when
@@ -143,13 +144,13 @@
 #login_dir = /var/run/dovecot/login
 
 # chroot login process to the login_dir. Only reason not to do this is if you
-# wish to run the whole Dovecot without roots. <doc/wiki/Rootless.txt>
+# wish to run the whole Dovecot without roots. </usr/share/doc/dovecot-common/wiki/Rootless.txt>
 #login_chroot = yes
 
 # User to use for the login process. Create a completely new user for this,
 # and don't use it anywhere else. The user must also belong to a group where
 # only it has access, it's used to control access for authentication process.
-# Note that this user is NOT used to access mails. <doc/wiki/UserIds.txt>
+# Note that this user is NOT used to access mails. </usr/share/doc/dovecot-common/wiki/UserIds.txt>
 #login_user = dovecot
 
 # Set max. process size in megabytes. If you don't use
@@ -217,13 +218,14 @@
 #   %d - domain part in user@domain, empty if there's no domain
 #   %h - home directory
 #
-# See <doc/wiki/Variables.txt> for full list. Some examples:
+# See </usr/share/doc/dovecot-common/wiki/Variables.txt> for full list.
+# Some examples:
 #
 #   mail_location = maildir:~/Maildir
 #   mail_location = mbox:~/mail:INBOX=/var/mail/%u
 #   mail_location = mbox:/var/mail/%d/%1n/%n:INDEX=/var/indexes/%d/%1n/%n
 #
-# <doc/wiki/MailLocation.txt>
+# </usr/share/doc/dovecot-common/wiki/MailLocation.txt>
 #
 #mail_location = 
 
@@ -299,7 +301,7 @@
 
 # System user and group used to access mails. If you use multiple, userdb
 # can override these by returning uid or gid fields. You can use either numbers
-# or names. <doc/wiki/UserIds.txt>
+# or names. </usr/share/doc/dovecot-common/wiki/UserIds.txt>
 #mail_uid =
 #mail_gid =
 
@@ -307,6 +309,7 @@
 # used only with INBOX when either its initial creation or dotlocking fails.
 # Typically this is set to "mail" to give access to /var/mail.
 #mail_privileged_group =
+mail_privileged_group = mail
 
 # Grant access to these supplementary groups for mail processes. Typically
 # these are used to set up access to shared mailboxes. Note that it may be
@@ -329,8 +332,8 @@
 # isn't finding your mails.
 #mail_debug = no
 
-# Log prefix for mail processes. See <doc/wiki/Variables.txt> for list of
-# possible variables you can use.
+# Log prefix for mail processes. See </usr/share/doc/dovecot-common/wiki/Variables.txt>
+# for list of possible variables you can use.
 #mail_log_prefix = "%Us(%u): "
 
 # Max. number of lines a mail process is allowed to log per second before it's
@@ -407,7 +410,7 @@
 # settings. If this setting is empty, "/./" in home dirs are ignored.
 # WARNING: Never add directories here which local users can modify, that
 # may lead to root exploit. Usually this should be done only if you don't
-# allow shell access for users. <doc/wiki/Chrooting.txt>
+# allow shell access for users. </usr/share/doc/dovecot-common/wiki/Chrooting.txt>
 #valid_chroot_dirs = 
 
 # Default chroot directory for mail processes. This can be overridden for
@@ -415,7 +418,7 @@
 # (eg. /home/./user chroots into /home). Note that usually there is no real
 # need to do chrooting, Dovecot doesn't allow users to access files outside
 # their mail directory anyway. If your home directories are prefixed with
-# the chroot directory, append "/." to mail_chroot. <doc/wiki/Chrooting.txt>
+# the chroot directory, append "/." to mail_chroot. </usr/share/doc/dovecot-common/wiki/Chrooting.txt>
 #mail_chroot = 
 
 ##
@@ -541,20 +544,20 @@
 
 protocol imap {
   # Login executable location.
-  #login_executable = /usr/libexec/dovecot/imap-login
+  #login_executable = /usr/lib/dovecot/imap-login
 
   # IMAP executable location. Changing this allows you to execute other
   # binaries before the imap process is executed.
   #
   # This would write rawlogs into user's ~/dovecot.rawlog/, if it exists:
-  #   mail_executable = /usr/libexec/dovecot/rawlog /usr/libexec/dovecot/imap
-  # <doc/wiki/Debugging/Rawlog.txt>
+  #   mail_executable = /usr/lib/dovecot/rawlog /usr/lib/dovecot/imap
+  # </usr/doc/dovecot-common/wiki/Debugging.Rawlog.txt>
   #
   # This would attach gdb into the imap process and write backtraces into
   # /tmp/gdbhelper.* files:
-  #   mail_executable = /usr/libexec/dovecot/gdbhelper /usr/libexec/dovecot/imap
+  #   mail_executable = /usr/lib/dovecot/gdbhelper /usr/lib/dovecot/imap
   #
-  #mail_executable = /usr/libexec/dovecot/imap
+  #mail_executable = /usr/lib/dovecot/imap
 
   # Maximum IMAP command line length in bytes. Some clients generate very long
   # command lines with huge mailboxes, so you may need to raise this if you get
@@ -568,7 +571,7 @@
   # Support for dynamically loadable plugins. mail_plugins is a space separated
   # list of plugins to load.
   #mail_plugins = 
-  #mail_plugin_dir = /usr/lib/dovecot/imap
+  #mail_plugin_dir = /usr/lib/dovecot/modules/imap
 
   # IMAP logout format string:
   #  %i - total number of bytes read from client
@@ -618,11 +621,11 @@
 
 protocol pop3 {
   # Login executable location.
-  #login_executable = /usr/libexec/dovecot/pop3-login
+  #login_executable = /usr/lib/dovecot/pop3-login
 
   # POP3 executable location. See IMAP's mail_executable above for examples
   # how this could be changed.
-  #mail_executable = /usr/libexec/dovecot/pop3
+  #mail_executable = /usr/lib/dovecot/pop3
 
   # Don't try to set mails non-recent or seen with POP3 sessions. This is
   # mostly intended to reduce disk I/O. With maildir it doesn't move files
@@ -642,7 +645,8 @@
 
   # POP3 UIDL (unique mail identifier) format to use. You can use following
   # variables, along with the variable modifiers described in
-  # <doc/wiki/Variables.txt> (e.g. %Uf for the filename in uppercase)
+  # </usr/share/doc/dovecot-common/wiki/Variables.txt> (e.g. %Uf for the
+  # filename in uppercase)
   #
   #  %v - Mailbox's IMAP UIDVALIDITY
   #  %u - Mail's IMAP UID
@@ -661,7 +665,7 @@
   # Dovecot's default, so if you're building a new server it would be a good
   # idea to change this. %08Xu%08Xv should be pretty fail-safe.
   #
-  #pop3_uidl_format = %08Xu%08Xv
+  pop3_uidl_format = %08Xu%08Xv
 
   # Permanently save UIDLs sent to POP3 clients, so pop3_uidl_format changes
   # won't change those UIDLs. Currently this works only with Maildir.
@@ -686,7 +690,7 @@
   # Support for dynamically loadable plugins. mail_plugins is a space separated
   # list of plugins to load.
   #mail_plugins = 
-  #mail_plugin_dir = /usr/lib/dovecot/pop3
+  #mail_plugin_dir = /usr/lib/dovecot/modules/pop3
 
   # Workarounds for various client bugs:
   #   outlook-no-nuls:
@@ -739,9 +743,9 @@
 ## LDA specific settings
 ##
 
-protocol lda {
+#protocol lda {
   # Address to use when sending rejection mails.
-  postmaster_address = postmaster@example.com
+  #postmaster_address = postmaster@example.com
 
   # Hostname to use in various parts of sent mails, eg. in Message-Id.
   # Default is the system's real hostname.
@@ -750,7 +754,7 @@
   # Support for dynamically loadable plugins. mail_plugins is a space separated
   # list of plugins to load.
   #mail_plugins = 
-  #mail_plugin_dir = /usr/lib/dovecot/lda
+  #mail_plugin_dir = /usr/lib/dovecot/modules/lda
 
   # If user is over quota, return with temporary failure instead of
   # bouncing the mail.
@@ -776,14 +780,14 @@
 
   # UNIX socket path to master authentication server to find users.
   #auth_socket_path = /var/run/dovecot/auth-master
-}
+#}
 
 ##
 ## Authentication processes
 ##
 
 # Executable location
-#auth_executable = /usr/libexec/dovecot/dovecot-auth
+#auth_executable = /usr/lib/dovecot/dovecot-auth
 
 # Set max. process size in megabytes.
 #auth_process_size = 256
@@ -865,7 +869,8 @@
 #auth_krb5_keytab = 
 
 # Do NTLM and GSS-SPNEGO authentication using Samba's winbind daemon and
-# ntlm_auth helper. <doc/wiki/Authentication/Mechanisms/Winbind.txt>
+# ntlm_auth helper.
+# </usr/share/doc/dovecot-common/wiki/Authentication.Mechanisms.Winbind.txt>
 #auth_use_winbind = no
 
 # Path for Samba's ntlm_auth helper binary.
@@ -887,13 +892,13 @@
   # allow both system users (/etc/passwd) and virtual users to login without
   # duplicating the system users into virtual database.
   #
-  # <doc/wiki/PasswordDatabase.txt>
+  # </usr/share/doc/dovecot-common/wiki/PasswordDatabase.txt>
   #
   # By adding master=yes setting inside a passdb you make the passdb a list
   # of "master users", who can log in as anyone else. Unless you're using PAM,
   # you probably still want the destination user to be looked up from passdb
   # that it really exists. This can be done by adding pass=yes setting to the
-  # master passdb. <doc/wiki/Authentication.MasterUsers.txt>
+  # master passdb. </usr/share/doc/dovecot-common/wiki/Authentication.MasterUsers.txt>
 
   # Users can be temporarily disabled by adding a passdb with deny=yes.
   # If the user is found from that database, authentication will fail.
@@ -902,7 +907,7 @@
 
   #passdb passwd-file {
     # File contains a list of usernames, one per line
-    #args = /etc/dovecot.deny
+    #args = /etc/dovecot/dovecot.deny
     #deny = yes
   #}
 
@@ -911,7 +916,7 @@
   # so it can't be used as userdb. If you don't want to use a separate user
   # database (passwd usually), you can use static userdb.
   # REMEMBER: You'll need /etc/pam.d/dovecot file created for PAM
-  # authentication to actually work. <doc/wiki/PasswordDatabase.PAM.txt>
+  # authentication to actually work. </usr/share/doc/dovecot-common/wiki/PasswordDatabase.PAM.txt>
   passdb pam {
     # [session=yes] [setcred=yes] [failure_show_msg=yes] [max_requests=<n>]
     # [cache_key=<key>] [<service name>]
@@ -932,7 +937,8 @@
     # because PAM modules can do all kinds of checks besides checking password,
     # such as checking IP address. Dovecot can't know about these checks
     # without some help. cache_key is simply a list of variables (see
-    # doc/wiki/Variables.txt) which must match for the cached data to be used.
+    # /usr/share/doc/dovecot-common/wiki/Variables.txt) which must match
+    # for the cached data to be used.
     # Here are some examples:
     #   %u - Username must match. Probably sufficient for most uses.
     #   %u%r - Username and remote IP address must match.
@@ -949,7 +955,7 @@
 
   # System users (NSS, /etc/passwd, or similiar)
   # In many systems nowadays this uses Name Service Switch, which is
-  # configured in /etc/nsswitch.conf. <doc/wiki/AuthDatabase.Passwd.txt>
+  # configured in /etc/nsswitch.conf. </usr/share/doc/dovecot-common/wiki/AuthDatabase.Passwd.txt>
   #passdb passwd {
     # [blocking=yes] - See userdb passwd for explanation
     #args = 
@@ -957,21 +963,21 @@
 
   # Shadow passwords for system users (NSS, /etc/shadow or similiar).
   # Deprecated by PAM nowadays.
-  # <doc/wiki/PasswordDatabase.Shadow.txt>
+  # </usr/share/doc/dovecot-common/wiki/PasswordDatabase.Shadow.txt>
   #passdb shadow {
     # [blocking=yes] - See userdb passwd for explanation
     #args = 
   #}
 
   # PAM-like authentication for OpenBSD.
-  # <doc/wiki/PasswordDatabase.BSDAuth.txt>
+  # </usr/share/doc/dovecot-common/wiki/PasswordDatabase.BSDAuth.txt>
   #passdb bsdauth {
     # [cache_key=<key>] - See cache_key in PAM for explanation.
     #args =
   #}
 
   # passwd-like file with specified location
-  # <doc/wiki/AuthDatabase.PasswdFile.txt>
+  # </usr/share/doc/dovecot-common/wiki/AuthDatabase.PasswdFile.txt>
   #passdb passwd-file {
     # [scheme=<default password scheme>] [username_format=<format>]
     # <Path for passwd-file>
@@ -980,25 +986,25 @@
 
   # checkpassword executable authentication
   # NOTE: You will probably want to use "userdb prefetch" with this.
-  # <doc/wiki/AuthDatabase.CheckPassword.txt>
+  # </usr/share/doc/dovecot-common/wiki/AuthDatabase.CheckPassword.txt>
   #passdb checkpassword {
     # Path for checkpassword binary
     #args = 
   #}
 
-  # SQL database <doc/wiki/AuthDatabase.SQL.txt>
+  # SQL database </usr/share/doc/dovecot-common/wiki/AuthDatabase.SQL.txt>
   #passdb sql {
-    # Path for SQL configuration file, see doc/dovecot-sql-example.conf
-    #args = 
+    # Path for SQL configuration file
+    #args = /etc/dovecot/dovecot-sql.conf
   #}
 
-  # LDAP database <doc/wiki/AuthDatabase.LDAP.txt>
+  # LDAP database </usr/share/doc/dovecot-common/wiki/AuthDatabase.LDAP.txt>
   #passdb ldap {
-    # Path for LDAP configuration file, see doc/dovecot-ldap-example.conf
-    #args = 
+    # Path for LDAP configuration file
+    #args = /etc/dovecot/dovecot-ldap.conf
   #}
 
-  # vpopmail authentication <doc/wiki/AuthDatabase.VPopMail.txt>
+  # vpopmail authentication </usr/share/doc/dovecot-common/wiki/AuthDatabase.VPopMail.txt>
   #passdb vpopmail {
     # [cache_key=<key>] - See cache_key in PAM for explanation.
     # [quota_template=<template>] - %q expands to Maildir++ quota
@@ -1010,20 +1016,20 @@
   # User database specifies where mails are located and what user/group IDs
   # own them. For single-UID configuration use "static".
   #
-  # <doc/wiki/UserDatabase.txt>
+  # </usr/share/doc/dovecot-common/wiki/UserDatabase.txt>
   #
 
   # "prefetch" user database means that the passdb already provided the
   # needed information and there's no need to do a separate userdb lookup.
   # This can be made to work with SQL and LDAP databases, see their example
   # configuration files for more information how to do it.
-  # <doc/wiki/UserDatabase.Prefetch.txt>
+  # </usr/share/doc/dovecot-common/wiki/UserDatabase.Prefetch.txt>
   #userdb prefetch {
   #}
 
   # System users (NSS, /etc/passwd, or similiar). In many systems nowadays this
   # uses Name Service Switch, which is configured in /etc/nsswitch.conf.
-  # <doc/wiki/AuthDatabase.Passwd.txt>
+  # </usr/share/doc/dovecot-common/wiki/AuthDatabase.Passwd.txt>
   userdb passwd {
     # [blocking=yes] - By default the lookups are done in the main dovecot-auth
     # process. This setting causes the lookups to be done in auth worker
@@ -1034,20 +1040,20 @@
   }
 
   # passwd-like file with specified location
-  # <doc/wiki/AuthDatabase.PasswdFile.txt>
+  # </usr/share/doc/dovecot-common/wiki/AuthDatabase.PasswdFile.txt>
   #userdb passwd-file {
     # [username_format=<format>] <Path for passwd-file>
     #args =
   #}
 
   # checkpassword executable user database lookup
-  # <doc/wiki/AuthDatabase.CheckPassword.txt>
+  # </usr/share/doc/dovecot-common/wiki/AuthDatabase.CheckPassword.txt>
   #userdb checkpassword {
     # Path for checkpassword binary
     #args = 
   #}
 
-  # static settings generated from template <doc/wiki/UserDatabase.Static.txt>
+  # static settings generated from template </usr/share/doc/dovecot-common/wiki/UserDatabase.Static.txt>
   #userdb static {
     # Template for the fields. Can return anything a userdb could normally
     # return. For example:
@@ -1064,19 +1070,19 @@
     #args =
   #}
 
-  # SQL database <doc/wiki/AuthDatabase.SQL.txt>
+  # SQL database </usr/share/doc/dovecot-common/wiki/AuthDatabase.SQL.txt>
   #userdb sql {
-    # Path for SQL configuration file, see doc/dovecot-sql-example.conf
-    #args = 
+    # Path for SQL configuration file
+    #args = /etc/dovecot/dovecot-sql.conf
   #}
 
-  # LDAP database <doc/wiki/AuthDatabase.LDAP.txt>
+  # LDAP database </usr/share/doc/dovecot-common/wiki/AuthDatabase.LDAP.txt>
   #userdb ldap {
-    # Path for LDAP configuration file, see doc/dovecot-ldap-example.conf
-    #args = 
+    # Path for LDAP configuration file
+    #args = /etc/dovecot/dovecot-ldap.conf
   #}
 
-  # vpopmail <doc/wiki/AuthDatabase.VPopMail.txt>
+  # vpopmail </usr/share/doc/dovecot-common/wiki/AuthDatabase.VPopMail.txt>
   #userdb vpopmail {
   #}
 
@@ -1150,7 +1156,7 @@
 # referenced using URIs in format "proxy::<name>".
 
 dict {
-  #quota = mysql:/etc/dovecot-dict-quota.conf 
+  #quota = mysql:/etc/dovecot/dovecot-dict-quota.conf
   #expire = db:/var/lib/dovecot/expire.db
 }
 
@@ -1202,7 +1208,7 @@
   # one file for each mailbox, eg. INBOX or sub.mailbox. cache_secs parameter
   # specifies how many seconds to wait between stat()ing dovecot-acl file
   # to see if it changed.
-  #acl = vfile:/etc/dovecot-acls:cache_secs=300
+  #acl = vfile:/etc/dovecot/dovecot-acls:cache_secs=300
 
   # To let users LIST mailboxes shared by other users, Dovecot needs a
   # shared mailbox dictionary. For example:
@@ -1225,14 +1231,14 @@
   # until the message can be saved within quota limits. The configuration file
   # is a text file where each line is in format: <priority> <mailbox name>
   # Mails are first deleted in lowest -> highest priority number order
-  #trash = /etc/dovecot-trash.conf
+  #trash = /etc/dovecot/dovecot-trash.conf
 
   # Expire plugin. Mails are expunged from mailboxes after being there the
   # configurable time. The first expiration date for each mailbox is stored in
   # a dictionary so it can be quickly determined which mailboxes contain
   # expired mails. The actual expunging is done in a nightly cronjob, which
   # you must set up:
-  #   dovecot --exec-mail ext /usr/libexec/dovecot/expire-tool
+  #   dovecot --exec-mail ext /usr/lib/dovecot/expire-tool
   #expire = Trash 7 Spam 30
   #expire_dict = proxy::expire
 
