#! /bin/sh -e

## DP: Small changes to dovecot-example.conf
## DP: Author: Jaldhar H. Vyas <jaldhar@debian.org>

. $(dirname $0)/DPATCH

exit 0
@DPATCH@
diff -urN dovecot-1.1.13/dovecot-example.conf dovecot-1.1.13.debian/dovecot-example.conf
--- dovecot-1.1.13/dovecot-example.conf	2009-03-13 22:23:14.000000000 +0100
+++ dovecot-1.1.13.debian/dovecot-example.conf	2009-03-29 21:34:12.000000000 +0200
@@ -16,11 +16,12 @@
 # --with-ssldir=/etc/ssl
 
 # Base directory where to store runtime data.
-#base_dir = /var/run/dovecot/
+#base_dir = /var/run/dovecot
 
 # Protocols we want to be serving: imap imaps pop3 pop3s
 # If you only want to use dovecot-auth, you can set this to "none".
 #protocols = imap imaps
+protocols = none
 
 # A space separated list of IP or host addresses where to listen in for
 # connections. "*" listens in all IPv4 interfaces. "[::]" listens in all IPv6
@@ -69,6 +70,7 @@
 # Prefix for each line written to log file. % codes are in strftime(3)
 # format.
 #log_timestamp = "%b %d %H:%M:%S "
+log_timestamp = "%Y-%m-%d %H:%M:%S "
 
 # Syslog facility to use if you're logging to syslog. Usually if you don't
 # want to use "mail", you'll use local0..local7. Also other standard
@@ -89,8 +91,7 @@
 
 # PEM encoded X.509 SSL/TLS certificate and private key. They're opened before
 # dropping root privileges, so keep the key file unreadable by anyone but
-# root. Included doc/mkcert.sh can be used to easily generate self-signed
-# certificate, just make sure to update the domains in dovecot-openssl.cnf
+# root.
 #ssl_cert_file = /etc/ssl/certs/dovecot.pem
 #ssl_key_file = /etc/ssl/private/dovecot.pem
 
@@ -206,7 +207,7 @@
 #   %d - domain part in user@domain, empty if there's no domain
 #   %h - home directory
 #
-# See doc/wiki/Variables.txt for full list. Some examples:
+# See /usr/share/doc/dovecot-common/wiki/Variables.txt for full list. Some examples:
 #
 #   mail_location = maildir:~/Maildir
 #   mail_location = mbox:~/mail:INBOX=/var/mail/%u
@@ -273,6 +274,7 @@
 # used only with INBOX when either its initial creation or dotlocking fails.
 # Typically this is set to "mail" to give access to /var/mail.
 #mail_privileged_group =
+mail_privileged_group = mail
 
 # Grant access to these supplementary groups for mail processes. Typically
 # these are used to set up access to shared mailboxes. Note that it may be
@@ -295,7 +297,8 @@
 # isn't finding your mails.
 #mail_debug = no
 
-# Log prefix for mail processes. See doc/wiki/Variables.txt for list of
+# Log prefix for mail processes.
+# See /usr/share/doc/dovecot-common/wiki/Variables.txt for list of
 # possible variables you can use.
 #mail_log_prefix = "%Us(%u): "
 
@@ -503,19 +506,19 @@
 
 protocol imap {
   # Login executable location.
-  #login_executable = /usr/libexec/dovecot/imap-login
+  #login_executable = /usr/lib/dovecot/imap-login
 
   # IMAP executable location. Changing this allows you to execute other
   # binaries before the imap process is executed.
   #
   # This would write rawlogs into ~/dovecot.rawlog/ directory:
-  #   mail_executable = /usr/libexec/dovecot/rawlog /usr/libexec/dovecot/imap
+  #   mail_executable = /usr/lib/dovecot/rawlog /usr/lib/dovecot/imap
   #
   # This would attach gdb into the imap process and write backtraces into
   # /tmp/gdbhelper.* files:
-  #   mail_executable = /usr/libexec/dovecot/gdbhelper /usr/libexec/dovecot/imap
+  #   mail_executable = /usr/lib/dovecot/gdbhelper /usr/lib/dovecot/imap
   #
-  #mail_executable = /usr/libexec/dovecot/imap
+  #mail_executable = /usr/lib/dovecot/imap
 
   # Maximum IMAP command line length in bytes. Some clients generate very long
   # command lines with huge mailboxes, so you may need to raise this if you get
@@ -529,7 +532,7 @@
   # Support for dynamically loadable plugins. mail_plugins is a space separated
   # list of plugins to load.
   #mail_plugins = 
-  #mail_plugin_dir = /usr/lib/dovecot/imap
+  #mail_plugin_dir = /usr/lib/dovecot/modules/imap
 
   # Send IMAP capabilities in greeting message. This makes it unnecessary for
   # clients to request it with CAPABILITY command, so it saves one round-trip.
@@ -572,11 +575,11 @@
 
 protocol pop3 {
   # Login executable location.
-  #login_executable = /usr/libexec/dovecot/pop3-login
+  #login_executable = /usr/lib/dovecot/pop3-login
 
   # POP3 executable location. See IMAP's mail_executable above for examples
   # how this could be changed.
-  #mail_executable = /usr/libexec/dovecot/pop3
+  #mail_executable = /usr/lib/dovecot/pop3
 
   # Don't try to set mails non-recent or seen with POP3 sessions. This is
   # mostly intended to reduce disk I/O. With maildir it doesn't move files
@@ -615,7 +618,7 @@
   # Dovecot's default, so if you're building a new server it would be a good
   # idea to change this. %08Xu%08Xv should be pretty fail-safe.
   #
-  #pop3_uidl_format = %08Xu%08Xv
+  pop3_uidl_format = %08Xu%08Xv
 
   # POP3 logout format string:
   #  %i - total number of bytes read from client
@@ -636,7 +639,7 @@
   # Support for dynamically loadable plugins. mail_plugins is a space separated
   # list of plugins to load.
   #mail_plugins = 
-  #mail_plugin_dir = /usr/lib/dovecot/pop3
+  #mail_plugin_dir = /usr/lib/dovecot/modules/pop3
 
   # Workarounds for various client bugs:
   #   outlook-no-nuls:
@@ -653,9 +656,9 @@
 ## LDA specific settings
 ##
 
-protocol lda {
+#protocol lda {
   # Address to use when sending rejection mails.
-  postmaster_address = postmaster@example.com
+  #postmaster_address = postmaster@example.com
 
   # Hostname to use in various parts of sent mails, eg. in Message-Id.
   # Default is the system's real hostname.
@@ -664,7 +667,7 @@
   # Support for dynamically loadable plugins. mail_plugins is a space separated
   # list of plugins to load.
   #mail_plugins = 
-  #mail_plugin_dir = /usr/lib/dovecot/lda
+  #mail_plugin_dir = /usr/lib/dovecot/modules/lda
 
   # If user is over quota, return with temporary failure instead of
   # bouncing the mail.
@@ -690,14 +693,14 @@
 
   # UNIX socket path to master authentication server to find users.
   #auth_socket_path = /var/run/dovecot/auth-master
-}
+#}
 
 ##
 ## Authentication processes
 ##
 
 # Executable location
-#auth_executable = /usr/libexec/dovecot/dovecot-auth
+#auth_executable = /usr/lib/dovecot/dovecot-auth
 
 # Set max. process size in megabytes.
 #auth_process_size = 256
@@ -820,7 +823,7 @@
 
   #passdb passwd-file {
     # File contains a list of usernames, one per line
-    #args = /etc/dovecot.deny
+    #args = /etc/dovecot/dovecot.deny
     #deny = yes
   #}
 
@@ -846,8 +849,8 @@
     # because PAM modules can do all kinds of checks besides checking password,
     # such as checking IP address. Dovecot can't know about these checks
     # without some help. cache_key is simply a list of variables (see
-    # doc/wiki/Variables.txt) which must match for the cached data to be used.
-    # Here are some examples:
+    # /usr/share/doc/dovecot-common/wiki/Variables.txt) which must match for
+    # the cached data to be used. Here are some examples:
     #   %u - Username must match. Probably sufficient for most uses.
     #   %u%r - Username and remote IP address must match.
     #   %u%s - Username and service (ie. IMAP, POP3) must match.
@@ -902,14 +905,14 @@
 
   # SQL database <doc/wiki/AuthDatabase.SQL.txt>
   #passdb sql {
-    # Path for SQL configuration file, see doc/dovecot-sql-example.conf
-    #args = 
+    # Path for SQL configuration file
+    #args = /etc/dovecot/dovecot-sql.conf
   #}
 
   # LDAP database <doc/wiki/AuthDatabase.LDAP.txt>
   #passdb ldap {
-    # Path for LDAP configuration file, see doc/dovecot-ldap-example.conf
-    #args = 
+    # Path for LDAP configuration file
+    #args = /etc/dovecot/dovecot-ldap.conf
   #}
 
   # vpopmail authentication <doc/wiki/AuthDatabase.VPopMail.txt>
@@ -973,14 +976,14 @@
 
   # SQL database <doc/wiki/AuthDatabase.SQL.txt>
   #userdb sql {
-    # Path for SQL configuration file, see doc/dovecot-sql-example.conf
-    #args = 
+    # Path for SQL configuration file
+    #args = /etc/dovecot/dovecot-sql.conf
   #}
 
   # LDAP database <doc/wiki/AuthDatabase.LDAP.txt>
   #userdb ldap {
-    # Path for LDAP configuration file, see doc/dovecot-ldap-example.conf
-    #args = 
+    # Path for LDAP configuration file
+    #args = /etc/dovecot/dovecot-ldap.conf
   #}
 
   # vpopmail <doc/wiki/AuthDatabase.VPopMail.txt>
@@ -1057,7 +1060,7 @@
 # referenced using URIs in format "proxy::<name>".
 
 dict {
-  #quota = mysql:/etc/dovecot-dict-quota.conf 
+  #quota = mysql:/etc/dovecot/dovecot-dict-quota.conf 
   #expire = db:/var/lib/dovecot/expire.db
 }
 
@@ -1109,7 +1112,7 @@
   # one file for each mailbox, eg. INBOX or sub.mailbox. cache_secs parameter
   # specifies how many seconds to wait between stat()ing dovecot-acl file
   # to see if it changed.
-  #acl = vfile:/etc/dovecot-acls:cache_secs=300
+  #acl = vfile:/etc/dovecot/dovecot-acls:cache_secs=300
 
   # Convert plugin. If set, specifies the source storage path which is
   # converted to destination storage (mail_location) when the user logs in.
@@ -1128,14 +1131,14 @@
   # until the message can be saved within quota limits. The configuration file
   # is a text file where each line is in format: <priority> <mailbox name>
   # Mails are first deleted in lowest -> highest priority number order
-  #trash = /etc/dovecot-trash.conf
+  #trash = /etc/dovecot/dovecot-trash.conf
 
   # Expire plugin. Mails are expunged from mailboxes after being there the
   # configurable time. The first expiration date for each mailbox is stored in
   # a dictionary so it can be quickly determined which mailboxes contain
   # expired mails. The actual expunging is done in a nightly cronjob, which
   # you must set up:
-  #   dovecot --exec-mail ext /usr/libexec/dovecot/expire-tool
+  #   dovecot --exec-mail ext /usr/lib/dovecot/expire-tool
   #expire = Trash 7 Spam 30
   #expire_dict = proxy::expire
 
