#! /bin/sh -e

## DP: SSL certificate fingerprint

. $(dirname $0)/DPATCH

exit 0
@DPATCH@
diff -urN dovecot-1.2.0/src/auth/auth-request.c dovecot-1.2.0-debian/src/auth/auth-request.c
--- dovecot-1.2.0/src/auth/auth-request.c	2009-06-18 07:37:04.000000000 +0000
+++ dovecot-1.2.0-debian/src/auth/auth-request.c	2009-07-06 06:40:00.000000000 +0000
@@ -164,6 +164,8 @@
 		request->master_user = p_strdup(request->pool, value);
 	else if (strcmp(key, "original_username") == 0)
 		request->original_username = p_strdup(request->pool, value);
+	else if (strcmp(key, "cert_fingerprint") == 0)
+		request->cert_fingerprint = p_strdup(request->pool, value);
 	else if (strcmp(key, "cert_username") == 0) {
 		if (request->auth->ssl_username_from_cert) {
 			/* get username from SSL certificate. it overrides
diff -urN dovecot-1.2.0/src/auth/auth-request.h dovecot-1.2.0-debian/src/auth/auth-request.h
--- dovecot-1.2.0/src/auth/auth-request.h	2009-02-24 16:18:03.000000000 +0000
+++ dovecot-1.2.0-debian/src/auth/auth-request.h	2009-07-06 06:44:22.000000000 +0000
@@ -44,6 +44,7 @@
 	const char *realm;
 	char *mech_password; /* set if verify_plain() is called */
 	char *passdb_password; /* set after password lookup if successful */
+	char *cert_fingerprint;
         /* extra_fields are returned in authentication reply. Fields prefixed
            with "userdb_" are skipped. If prefetch userdb is used, it uses
            the "userdb_" prefixed fields. */
diff -urN dovecot-1.2.0/src/auth/db-checkpassword.c dovecot-1.2.0-debian/src/auth/db-checkpassword.c
--- dovecot-1.2.0/src/auth/db-checkpassword.c	2009-01-10 20:32:50.000000000 +0000
+++ dovecot-1.2.0-debian/src/auth/db-checkpassword.c	2009-07-06 06:43:22.000000000 +0000
@@ -120,6 +120,10 @@
 		env_put(t_strconcat("MASTER_USER=",
 				    request->master_user, NULL));
 	}
+	if (request->cert_fingerprint != NULL) {
+		env_put(t_strconcat("SSL_FINGERPRINT=",
+				request->cert_fingerprint, NULL));
+	}
 	if (request->extra_fields != NULL) {
 		const char *fields =
 			auth_stream_reply_export(request->extra_fields);
diff -urN dovecot-1.2.0/src/lib-auth/auth-client.h dovecot-1.2.0-debian/src/lib-auth/auth-client.h
--- dovecot-1.2.0/src/lib-auth/auth-client.h	2008-07-28 23:39:53.000000000 +0000
+++ dovecot-1.2.0-debian/src/lib-auth/auth-client.h	2009-07-06 06:38:16.000000000 +0000
@@ -26,6 +26,7 @@
 	const char *mech;
 	const char *service;
 	const char *cert_username;
+	const char *cert_fingerprint;
 	enum auth_request_flags flags;
 
 	struct ip_addr local_ip, remote_ip;
diff -urN dovecot-1.2.0/src/lib-auth/auth-server-request.c dovecot-1.2.0-debian/src/lib-auth/auth-server-request.c
--- dovecot-1.2.0/src/lib-auth/auth-server-request.c	2009-01-10 20:33:18.000000000 +0000
+++ dovecot-1.2.0-debian/src/lib-auth/auth-server-request.c	2009-07-06 06:37:32.000000000 +0000
@@ -15,7 +15,7 @@
 
 	unsigned int id;
 
-	char *mech, *service, *cert_username;
+	char *mech, *service, *cert_username, *cert_fingerprint;
         enum auth_request_flags flags;
 	struct ip_addr local_ip, remote_ip;
 	unsigned int local_port, remote_port;
@@ -106,6 +106,14 @@
 		}
 		str_printfa(str, "\tcert_username=%s", request->cert_username);
 	}
+	if (request->cert_fingerprint != NULL) {
+		if (!is_valid_string(request->cert_fingerprint)) {
+			t_pop();
+			*error_r = "Invalid fingerprint in SSL certificate";
+			return -1;
+		}
+		str_printfa(str, "\tcert_fingerprint=%s", request->cert_fingerprint);
+	}
 	if (request->local_ip.family != 0)
 		str_printfa(str, "\tlip=%s", net_ip2addr(&request->local_ip));
 	if (request->remote_ip.family != 0)
@@ -348,6 +356,7 @@
 	request->mech = i_strdup(request_info->mech);
 	request->service = i_strdup(request_info->service);
 	request->cert_username = i_strdup(request_info->cert_username);
+	request->cert_fingerprint = i_strdup(request_info->cert_fingerprint);
 	request->flags = request_info->flags;
 	request->local_ip = request_info->local_ip;
 	request->remote_ip = request_info->remote_ip;
@@ -393,6 +402,7 @@
 	i_free(request->mech);
 	i_free(request->service);
 	i_free(request->cert_username);
+	i_free(request->cert_fingerprint);
 	i_free(request);
 }
 
diff -urN dovecot-1.2.0/src/login-common/sasl-server.c dovecot-1.2.0-debian/src/login-common/sasl-server.c
--- dovecot-1.2.0/src/login-common/sasl-server.c	2009-01-10 20:33:18.000000000 +0000
+++ dovecot-1.2.0-debian/src/login-common/sasl-server.c	2009-07-06 06:28:51.000000000 +0000
@@ -161,6 +161,8 @@
 	info.service = service;
 	info.cert_username = client->proxy == NULL ? NULL :
 		ssl_proxy_get_peer_name(client->proxy);
+	info.cert_fingerprint = client->proxy == NULL ? NULL :
+		ssl_proxy_get_fingerprint(client->proxy);
 	info.flags = client_get_auth_flags(client);
 	info.local_ip = client->local_ip;
 	info.remote_ip = client->ip;
diff -urN dovecot-1.2.0/src/login-common/ssl-proxy.c dovecot-1.2.0-debian/src/login-common/ssl-proxy.c
--- dovecot-1.2.0/src/login-common/ssl-proxy.c	2009-05-02 18:40:48.000000000 +0000
+++ dovecot-1.2.0-debian/src/login-common/ssl-proxy.c	2009-07-06 06:26:58.000000000 +0000
@@ -57,6 +57,12 @@
 
 void ssl_proxy_free(struct ssl_proxy *proxy ATTR_UNUSED) {}
 
+const char *ssl_proxy_get_fingerprint(struct ssl_proxy *proxy __attr_unused__)
+{
+	return NULL;
+}
+
+
 unsigned int ssl_proxy_get_count(void)
 {
 	return 0;
diff -urN dovecot-1.2.0/src/login-common/ssl-proxy-gnutls.c dovecot-1.2.0-debian/src/login-common/ssl-proxy-gnutls.c
--- dovecot-1.2.0/src/login-common/ssl-proxy-gnutls.c	2009-01-10 20:33:18.000000000 +0000
+++ dovecot-1.2.0-debian/src/login-common/ssl-proxy-gnutls.c	2009-07-06 06:45:13.000000000 +0000
@@ -61,6 +61,11 @@
 	return gnutls_alert_get_name(gnutls_alert_get(proxy->session));
 }
 
+const char *ssl_proxy_get_fingerprint(struct ssl_proxy *proxy __attr_unused__)
+{
+	return NULL;
+}
+
 static int handle_ssl_error(struct ssl_proxy *proxy, int error)
 {
 	if (!gnutls_error_is_fatal(error)) {
diff -urN dovecot-1.2.0/src/login-common/ssl-proxy.h dovecot-1.2.0-debian/src/login-common/ssl-proxy.h
--- dovecot-1.2.0/src/login-common/ssl-proxy.h	2009-05-02 18:40:48.000000000 +0000
+++ dovecot-1.2.0-debian/src/login-common/ssl-proxy.h	2009-07-06 06:29:33.000000000 +0000
@@ -25,6 +25,7 @@
 const char *ssl_proxy_get_last_error(const struct ssl_proxy *proxy) ATTR_PURE;
 const char *ssl_proxy_get_security_string(struct ssl_proxy *proxy);
 void ssl_proxy_free(struct ssl_proxy *proxy);
+const char *ssl_proxy_get_fingerprint(struct ssl_proxy *proxy);
 
 /* Return number of active SSL proxies */
 unsigned int ssl_proxy_get_count(void) ATTR_PURE;
diff -urN dovecot-1.2.0/src/login-common/ssl-proxy-openssl.c dovecot-1.2.0-debian/src/login-common/ssl-proxy-openssl.c
--- dovecot-1.2.0/src/login-common/ssl-proxy-openssl.c	2009-05-02 18:40:48.000000000 +0000
+++ dovecot-1.2.0-debian/src/login-common/ssl-proxy-openssl.c	2009-07-06 06:33:14.000000000 +0000
@@ -26,6 +26,8 @@
 /* Check every 30 minutes if parameters file has been updated */
 #define SSL_PARAMFILE_CHECK_INTERVAL (60*30)
 
+static const char hexcodes[] = "0123456789ABCDEF";
+
 enum ssl_io_action {
 	SSL_ADD_INPUT,
 	SSL_REMOVE_INPUT,
@@ -608,6 +610,35 @@
 	return *name == '\0' ? NULL : name;
 }
 
+const char *ssl_proxy_get_fingerprint(struct ssl_proxy *proxy) {
+	X509 *x509;
+	char *peer_fingerprint = NULL;
+	unsigned char md[EVP_MAX_MD_SIZE];
+	unsigned int n;
+	int j;
+
+	if (!ssl_proxy_has_valid_client_cert(proxy))
+	return NULL;
+
+	x509 = SSL_get_peer_certificate(proxy->ssl);
+	if (x509 == NULL)
+		return NULL; /* we should have had it.. */
+
+	if (X509_digest(x509, EVP_md5(), md, &n) && n > 0) {
+		peer_fingerprint = i_malloc(n * 3);
+		for (j = 0; j < (int) n; j++) {
+			peer_fingerprint[j * 3] = hexcodes[(md[j] & 0xf0) >> 4U];
+			peer_fingerprint[(j * 3) + 1] = hexcodes[(md[j] & 0x0f)];
+			if (j + 1 != (int) n)
+				peer_fingerprint[(j * 3) + 2] = ':';
+			else
+				peer_fingerprint[(j * 3) + 2] = '\0';
+		}
+		i_info("fingerprint: %s", peer_fingerprint);
+	}
+	return (const char *)peer_fingerprint;
+}
+
 bool ssl_proxy_is_handshaked(const struct ssl_proxy *proxy)
 {
 	return proxy->handshaked;
